services:
    
  # zookeeper:
  #   image: confluentinc/cp-zookeeper:latest
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: 2181
  #     ZOOKEEPER_TICK_TIME: 2000
  #   ports:
  #     - 2181:2181

  # kafka: 
  #   image: confluentinc/cp-kafka:7.3.3
  #   depends_on:
  #     - zookeeper
  #   ports:
  #     - 9092:9092
  #   environment:
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
  #     KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  # create-topic:
  #   image: confluentinc/cp-kafka:7.3.3
  #   depends_on:
  #     - kafka
  #   entrypoint: [ '/bin/sh', '-c' ]
  #   command: |
  #     "
  #     # blocks until kafka is reachable
  #     kafka-topics --bootstrap-server kafka:29092 --list

  #     echo -e 'Creating kafka topics'
  #     kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic datosAPI --replication-factor 1 --partitions 1

  #     echo -e 'Successfully created the following topics:'
  #     kafka-topics --bootstrap-server kafka:29092 --list
  #     "
  
  # kafka-ui:
  #   image: provectuslabs/kafka-ui:latest
  #   container_name: kafka-ui-3
  #   depends_on:
  #     - kafka
  #   ports:
  #     - 8080:8080
  #   restart: always
  #   environment:
  #     - KAFKA_CLUSTERS_0_NAME=base
  #     - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:29092
        
  # Definición del servicio jobmanager para Apache Flink
  jobmanager:
    build:
      context: .  # Contexto de construcción para la imagen del contenedor
      dockerfile: Dockerfile  # Archivo Dockerfile utilizado para construir la imagen
    ports:
      - "8081:8081"  # Mapeo de puertos del contenedor al host para acceder a la interfaz web del JobManager
    volumes:
      - ./scripts:/tmp/scripts  # Volumen para montar un directorio del host en el contenedor
    command: ["/bin/bash", "-c", "/opt/flink/bin/jobmanager.sh start-foreground"]

  # Definición del servicio taskmanager para Apache Flink
  taskmanager:
    build:
      context: .  # Contexto de construcción para la imagen del contenedor
      dockerfile: Dockerfile  # Archivo Dockerfile utilizado para construir la imagen
    command: ["/bin/bash", "-c", "/opt/flink/bin/taskmanager.sh start-foreground"]  # Comando que se ejecutará al iniciar este contenedor
    depends_on:
      - jobmanager  # Dependencia del servicio taskmanager respecto al servicio jobmanager